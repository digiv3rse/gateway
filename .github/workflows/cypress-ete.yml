name: Cypress E2E tests against IDAPI
on:
  workflow_call:
jobs:
  cypress-ete:
    name: Cypress End to End tests against IDAPI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4]
    timeout-minutes: 15
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps Redis port 6379 on service container to the host
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup OS, Nginx, and Certs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libnss3-tools
          sudo service nginx restart
          wget -q https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
          wget -q https://github.com/guardian/dev-nginx/releases/latest/download/dev-nginx.tar.gz
          sudo cp mkcert-v1.4.3-linux-amd64 /usr/local/bin/mkcert
          sudo chmod +x /usr/local/bin/mkcert
          sudo mkdir -p /usr/local/bin/dev-nginx
          sudo tar -xzf dev-nginx.tar.gz -C /usr/local
          sudo chmod +x /usr/local/bin/dev-nginx
          sudo dev-nginx setup-cert "profile.thegulocal.com"
          sudo cp ./scripts/nginx.conf /etc/nginx/nginx.conf
          sudo dev-nginx restart-nginx
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Unzip build
        run: unzip -q build.zip
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          PORT: 8861
          ENVIRONMENT: production
          STAGE: DEV
          BASE_URI: profile.thegulocal.com
          CYPRESS_BASE_URI: profile.thegulocal.com
          IDAPI_CLIENT_ACCESS_TOKEN: ${{ secrets.IDAPI_CLIENT_ACCESS_TOKEN }}
          CYPRESS_IDAPI_CLIENT_ACCESS_TOKEN: ${{ secrets.IDAPI_CLIENT_ACCESS_TOKEN }}
          IDAPI_BASE_URL: https://idapi.code.dev-theguardian.com
          CYPRESS_IDAPI_BASE_URL: https://idapi.code.dev-theguardian.com
          DEFAULT_RETURN_URI: https://m.code.dev-theguardian.com
          CYPRESS_DEFAULT_RETURN_URI: https://m.code.dev-theguardian.com
          SIGN_IN_PAGE_URL: https://profile.thegulocal.com/signin
          OAUTH_BASE_URL: https://oauth.code.dev-theguardian.com
          CYPRESS_SIGN_IN_PAGE_URL: https://profile.thegulocal.com/signin
          IS_HTTPS: true
          APP_SECRET: ${{ secrets.APP_SECRET }}
          CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}
          CYPRESS_MAILOSAUR_SERVER_ID: ${{ secrets.CYPRESS_MAILOSAUR_SERVER_ID }}
          # These are public test keys provided by Google for testing.
          # https://developers.google.com/recaptcha/docs/faq#id-like-to-run-automated-tests-with-recaptcha.-what-should-i-do
          GOOGLE_RECAPTCHA_SITE_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
          GOOGLE_RECAPTCHA_SECRET_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
          ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
          OKTA_ORG_URL: oktaorgurl
          OKTA_API_TOKEN: oktatoken
          OKTA_CUSTOM_OAUTH_SERVER: oktaoauthserverid
          OKTA_CLIENT_ID: oktaclientid
          OKTA_CLIENT_SECRET: oktaclientsecret
          OKTA_IDP_APPLE: oktaappleidp
          OKTA_IDP_FACEBOOK: oktafacebookidp
          OKTA_IDP_GOOGLE: oktagoogleidp
          OKTA_GUARDIAN_USERS_ALL_GROUP_ID: oktaGuardianUserGroupId
          LOGGING_KINESIS_STREAM: ''
          EC2_INSTANCE_ID: ''
          # This is a public URL+key sent to Sentry on the client side
          # We disable Sentry for our tests
          SENTRY_DSN: ''
          REDIS_HOST: localhost
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_SSL_ON: false
          RATE_LIMITER_CONFIG: '{"enabled":true,"defaultBuckets":{"globalBucket":{"capacity":500,"addTokenMs":50},"ipBucket":{"capacity":100,"addTokenMs":50},"emailBucket":{"capacity":100,"addTokenMs":50},"oktaIdentifierBucket":{"capacity":100,"addTokenMs":50},"accessTokenBucket":{"capacity":4,"addTokenMs":5000}},"routeBuckets":{}}'
          # Required for the Cypress tests to run as we're unable to verify the created certs
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          # Used to tell Gateway server we're running in Cypress
          RUNNING_IN_CYPRESS: true
        with:
          install: yarn install --frozen-lockfile --immutable
          start: yarn start
          wait-on: 'https://profile.thegulocal.com/healthcheck'
          wait-on-timeout: 60
          browser: chrome
          spec: cypress/integration/ete/**/*.cy.ts
          config: '{"chromeWebSecurity": false,"baseUrl":"https://profile.thegulocal.com","numTestsKeptInMemory":"1","e2e":{"specPattern": ["cypress/integration/ete/**/*.${{ matrix.group }}.cy.ts"]}}'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
